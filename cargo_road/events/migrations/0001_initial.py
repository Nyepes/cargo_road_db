# Generated by Django 4.1.1 on 2022-09-12 23:27

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cargo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shipment', models.PositiveIntegerField(unique=True)),
                ('description', models.CharField(max_length=300)),
                ('pickup_date', models.DateField()),
                ('delivery_date', models.DateField()),
                ('load_miles', models.PositiveSmallIntegerField(blank=True)),
                ('loaded_income', models.DecimalField(decimal_places=2, max_digits=10)),
                ('fuel_surcharge', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('tolls_surcharge', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('dhpu', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('empty_income', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('t_check_advance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('traded_value', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('detention', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('state', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nickname', models.CharField(blank=True, max_length=20)),
                ('name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=30)),
                ('w2', models.BooleanField()),
                ('driver_id_fedex', models.PositiveIntegerField(blank=True)),
                ('standard_pay', models.PositiveSmallIntegerField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='DriverSettlement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('settlement_drivers', models.PositiveIntegerField()),
                ('pay_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='FedexSettlement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('settlement_fedex', models.PositiveIntegerField()),
                ('settlement_date', models.DateField()),
                ('fedex_payment_date', models.DateField()),
                ('applicant_cost', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('personal_insurance', models.DecimalField(decimal_places=2, default=0, max_digits=7)),
                ('adjust', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
            ],
        ),
        migrations.CreateModel(
            name='Truck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=8)),
                ('plate', models.CharField(blank=True, max_length=8)),
                ('standard_c_link', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10)),
                ('standard_insurance', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='TruckFedexSettlement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('c_link', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('mileage_taxes', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('fuel_taxes', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('other_costs', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('scrow', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('settlement_fedex', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.fedexsettlement')),
                ('truck_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.truck')),
            ],
        ),
        migrations.CreateModel(
            name='DriverXCargo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percentage', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('dri', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.driver')),
                ('shipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.cargo')),
            ],
        ),
        migrations.AddField(
            model_name='cargo',
            name='driver_settlement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.driversettlement'),
        ),
        migrations.AddField(
            model_name='cargo',
            name='fedex_settlement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.fedexsettlement'),
        ),
        migrations.AddField(
            model_name='cargo',
            name='truck',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.truck'),
        ),
    ]
